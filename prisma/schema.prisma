generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model buku {
  BukuID              Int                   @id @default(autoincrement())
  Judul               String                @db.VarChar(225) @unique
  Penulis             String                @db.VarChar(225)
  Penerbit            String                @db.VarChar(225)
  TahunTerbit         Int
  kategoribuku_relasi kategoribuku_relasi[]
  koleksipribadi      koleksipribadi[]
  peminjaman          peminjaman[]
  ulasanbuku          ulasanbuku[]

  @@index([TahunTerbit], map: "TahunTerbit")
}

model kategoribuku {
  KategoriID          Int                   @id @default(autoincrement())
  NamaKategori        String                @db.VarChar(255)
  kategoribuku_relasi kategoribuku_relasi[]
}

model kategoribuku_relasi {
  KategoriBukuID Int          @id @default(autoincrement())
  BukuID         Int
  KategoriID     Int
  buku           buku         @relation(fields: [BukuID], references: [BukuID], onUpdate: Restrict, map: "kategoribuku_relasi_ibfk_1")
  kategoribuku   kategoribuku @relation(fields: [KategoriID], references: [KategoriID], onUpdate: Restrict, map: "kategoribuku_relasi_ibfk_2")

  @@index([BukuID], map: "BukuID")
  @@index([KategoriID], map: "KategoriID")
}

model koleksipribadi {
  KoleksiID Int  @id @default(autoincrement())
  UserID    Int
  BukuID    Int
  user      user @relation(fields: [UserID], references: [UserID], onUpdate: Restrict, map: "koleksipribadi_ibfk_1")
  buku      buku @relation(fields: [BukuID], references: [BukuID], onUpdate: Restrict, map: "koleksipribadi_ibfk_2")

  @@index([BukuID], map: "BukuID")
  @@index([UserID], map: "UserID")
}

model peminjaman {
  PeminjamanID        Int      @id @default(autoincrement())
  UserID              Int
  BukuID              Int
  TanggalPeminjaman   DateTime @db.Date
  TanggalPengembalian DateTime @db.Date
  StatusPinjaman      String   @db.VarChar(50)
  user                user     @relation(fields: [UserID], references: [UserID], onUpdate: Restrict, map: "peminjaman_ibfk_1")
  buku                buku     @relation(fields: [BukuID], references: [BukuID], onUpdate: Restrict, map: "peminjaman_ibfk_2")

  @@index([BukuID], map: "BukuID")
  @@index([UserID], map: "UserID")
}

model ulasanbuku {
  UlasanID Int    @id @default(autoincrement())
  UserID   Int
  BukuID   Int
  Ulasan   String @db.Text
  Rating   Int
  buku     buku   @relation(fields: [BukuID], references: [BukuID], onUpdate: Restrict, map: "ulasanbuku_ibfk_1")
  user     user   @relation(fields: [UserID], references: [UserID], onUpdate: Restrict, map: "ulasanbuku_ibfk_2")

  @@index([BukuID], map: "BukuID")
  @@index([Rating], map: "Rating")
  @@index([UserID], map: "UserID")
}

model user {
  UserID         Int              @id @default(autoincrement())
  Username       String           @unique @db.VarChar(255)
  Password       String           @db.VarChar(255)
  Email          String           @db.VarChar(255)
  Nama_lengkap   String           @db.VarChar(255)
  Role           String           @db.VarChar(255)
  Alamat         String           @db.Text
  koleksipribadi koleksipribadi[]
  peminjaman     peminjaman[]
  ulasanbuku     ulasanbuku[]
}
